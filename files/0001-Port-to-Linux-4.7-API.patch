From 50d8cadef9a6b79500e57aa84ee75867000e9dcc Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sun, 7 Aug 2016 22:37:33 +0100
Subject: [PATCH] Port to Linux 4.7 API

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 kernel/os-mlock.c       |  6 +++---
 kernel/uvm/uvm_common.c | 11 ++++++-----
 kernel/uvm/uvm_lite.c   |  2 +-
 3 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/kernel/os-mlock.c b/kernel/os-mlock.c
index 9d8b495..3f16bcb 100644
--- a/kernel/os-mlock.c
+++ b/kernel/os-mlock.c
@@ -116,7 +116,7 @@ NV_STATUS NV_API_CALL os_lock_user_pages(
     }
 
     down_read(&mm->mmap_sem);
-    ret = get_user_pages(current, mm, (unsigned long)address,
+    ret = get_user_pages((unsigned long)address,
             page_count, write, force, user_pages, NULL);
     up_read(&mm->mmap_sem);
     pinned = ret;
@@ -129,7 +129,7 @@ NV_STATUS NV_API_CALL os_lock_user_pages(
     else if (pinned < page_count)
     {
         for (i = 0; i < pinned; i++)
-            page_cache_release(user_pages[i]);
+            put_page(user_pages[i]);
         os_free_mem(user_pages);
         return NV_ERR_INVALID_ADDRESS;
     }
@@ -156,7 +156,7 @@ NV_STATUS NV_API_CALL os_unlock_user_pages(
     {
         if (write)
             set_page_dirty_lock(user_pages[i]);
-        page_cache_release(user_pages[i]);
+        put_page(user_pages[i]);
     }
 
     os_free_mem(user_pages);
diff --git a/kernel/uvm/uvm_common.c b/kernel/uvm/uvm_common.c
index 0c0ce4f..3953341 100644
--- a/kernel/uvm/uvm_common.c
+++ b/kernel/uvm/uvm_common.c
@@ -56,7 +56,7 @@ static void uvmnext_exit(void)
 {
 
 }
-static NV_STATUS uvmnext_isr_top_half(void)
+static NV_STATUS uvmnext_isr_top_half(__attribute__((unused)) UvmGpuUuid *gpuUuidStruct)
 {
     return NV_ERR_NO_INTR_PENDING;
 }
@@ -75,7 +75,6 @@ NvBool uvmnext_activated(void)
 #endif // NVIDIA_UVM_NEXT_ENABLED
 
 static dev_t g_uvmBaseDev;
-struct UvmOpsUvmEvents g_exportedUvmOps;
 
 // TODO: This would be easier if RM allowed for multiple registrations, since we
 //       could register UVM-Lite and UVM-Next separately (bug 1372835).
@@ -108,9 +107,11 @@ static NV_STATUS uvmSetupGpuProvider(void)
     NV_STATUS status = NV_OK;
 
 #ifdef NVIDIA_UVM_RM_ENABLED
-    g_exportedUvmOps.startDevice = uvm_gpu_event_start_device;
-    g_exportedUvmOps.stopDevice  = uvm_gpu_event_stop_device;
-    g_exportedUvmOps.isrTopHalf  = uvmnext_isr_top_half;
+    static struct UvmOpsUvmEvents g_exportedUvmOps = {
+        .startDevice = uvm_gpu_event_start_device,
+        .stopDevice  = uvm_gpu_event_stop_device,
+        .isrTopHalf  = uvmnext_isr_top_half
+    };
 
     // call RM to exchange the function pointers.
     status = nvUvmInterfaceRegisterUvmCallbacks(&g_exportedUvmOps);
diff --git a/kernel/uvm/uvm_lite.c b/kernel/uvm/uvm_lite.c
index fa3ec34..87ca4e4 100644
--- a/kernel/uvm/uvm_lite.c
+++ b/kernel/uvm/uvm_lite.c
@@ -1240,7 +1240,7 @@ int _fault_common(struct vm_area_struct *vma, unsigned long vaddr,
         // If we already have the page, then we must have earlier copied in the
         // data from the GPU. Therefore, avoid migrating.
         //
-        retValue = VM_FAULT_MINOR;
+        retValue = 0;
     }
 
     // Increment the page usage count since the kernel automatically
-- 
2.9.2

